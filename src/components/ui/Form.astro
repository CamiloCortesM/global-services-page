---
import type { Form } from '@/types';
import { Button } from '../ui';

const {
  inputs,
  textarea,
  disclaimer,
  button = 'Contact us',
  description = '',
} = Astro.props as Form;
---

<form onsubmit="formValidate(e)">
  {
    inputs?.map(
      ({
        type = 'text',
        name,
        label = '',
        autocomplete = 'on',
        placeholder = '',
      }) =>
        name && (
          <div class="mb-6">
            {label && (
              <label for={name} class="block text-sm font-medium">
                {label}
              </label>
            )}
            <input
              type={type}
              name={name}
              id={name}
              autocomplete={autocomplete}
              placeholder={placeholder}
              class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 bg-white error"
              required
              oninvalid="this.setCustomValidity('Please fill in this field.')"
              oninput="this.setCustomValidity('')"
            />
          </div>
        )
    )
  }

  {
    textarea && (
      <div>
        <label for="textarea" class="block text-sm font-medium">
          {textarea.label}
        </label>
        <textarea
          id="textarea"
          name="textarea"
          rows={textarea.rows ?? 4}
          placeholder={textarea.placeholder}
          class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 bg-white error"
          required
          oninvalid="this.setCustomValidity('Please write your message.')"
          oninput="this.setCustomValidity('')"
        />
      </div>
    )
  }

  {
    disclaimer && (
      <div class="mt-3 flex items-start">
        <div class="flex mt-0.5">
          <input
            id="disclaimer"
            name="disclaimer"
            type="checkbox"
            class="cursor-pointer mt-1 py-3 px-4 block w-full text-md rounded-lg border border-gray-200 bg-white"
            required
            oninvalid="this.setCustomValidity('Check this box if you want to continue.')"
            oninput="this.setCustomValidity('')"
          />
        </div>
        <div class="ml-3">
          <label
            for="disclaimer"
            class="cursor-pointer select-none text-sm text-gray-600"
          >
            {disclaimer.label}
          </label>
        </div>
      </div>
    )
  }

  {
    button && (
      <div class="mt-10 grid">
        <Button variant="primary" type="submit">
          {button}
        </Button>
      </div>
    )
  }

  {
    description && (
      <div class="mt-3 text-center">
        <p class="text-sm text-gray-600">{description}</p>
      </div>
    )
  }
</form>

<style>
  .error:focus-visible {
    outline: none;
    border-color: #f13236;
  }
</style>

<script>
  function formValidate(e) {
    const form = e.target;
    if (!form.checkValidity()) {
      e.preventDefault();
      form.querySelectorAll('.error').forEach((element) => {
        if (!element.validity.valid) {
          element.classList.add('error');
        } else {
          element.classList.remove('error');
        }
      });
    }
  }
</script>
