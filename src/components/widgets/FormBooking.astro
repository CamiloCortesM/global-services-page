---
import Step1 from './Step1.astro';
import ProgressBarStep from '../ui/ProgressBarStep.astro';
import Step2 from './Step2.astro';
import Step4 from './Step4.astro';
import Step3 from './Step3.astro';
---

<style is:global>
  .icon-step {
    background-color: white;
  }

  .icon-step span {
    color: rgb(75 85 99 / 1);
  }

  .icon-active {
    background-color: #464c8f;
  }

  .icon-active span {
    color: white;
  }

  .card {
    animation: fade 450ms ease-in-out forwards;
  }

  .card.active {
    animation: fade-back 250ms ease-in-out both;
  }

  @keyframes fade {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes fade-back {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
</style>

<script>
  function init() {
    if (window.location.pathname !== '/booking') return;
    // const multiStepForm = document.querySelector('[data-multi-step]');
    // const fieldsets = [...(multiStepForm?.querySelectorAll('fieldset') || [])];
    // const progressBar = document.querySelectorAll('#progressbar > div');

    // let currentStep = 0;

    // function showStep(step: number) {
    //   fieldsets?.forEach((fieldset, index) => {
    //     fieldset.classList.toggle('active', index === step);
    //   });

    //   progressBar.forEach((stepElement, index) => {
    //     if (index === 0) return;
    //     const isStepActive = index <= step;
    //     stepElement
    //       .querySelector('.line-icon-step')
    //       ?.classList.toggle('bg-[#464c8f]', isStepActive);
    //     stepElement
    //       .querySelector('.icon-step')
    //       ?.classList.toggle('icon-active', isStepActive);
    //   });
    // }

    // function getFormHTMLForService(service: string) {
    //   switch (service) {
    //     case 'Regular Cleaning':
    //       return `
    //             <label for="regular-cleaning-details">Additional details for Regular Cleaning:</label>
    //             <textarea id="regular-cleaning-details" name="regular-cleaning-details" rows="4"></textarea>
    //         `;
    //     case 'One off Cleaning':
    //       return `
    //             <label for="one-off-cleaning-preferences">Preferences for One off Cleaning:</label>
    //             <input type="text" id="one-off-cleaning-preferences" name="one-off-cleaning-preferences">
    //         `;
    //     case 'End of Tenancy Cleaning':
    //       return `
    //             <label for="end-of-tenancy-cleaning-date">Date for End of Tenancy Cleaning:</label>
    //             <input type="date" id="end-of-tenancy-cleaning-date" name="end-of-tenancy-cleaning-date">
    //         `;
    //     // Agrega mÃ¡s casos para los otros servicios si es necesario...
    //     default:
    //       return '';
    //   }
    // }

    // multiStepForm?.addEventListener('click', (e: any) => {
    //   let incrementor: number | null = null;
    //   if (e.target!.matches('[data-next]')) {
    //     incrementor = 1;
    //   } else if (e.target.matches('[data-previous]')) {
    //     currentStep += -1;
    //     return showStep(currentStep);
    //   }

    //   if (incrementor == null) return;

    //   switch (currentStep) {
    //     case 0:
    //       const h2Element = fieldsets[currentStep + 1].querySelector('h2');
    //       const selectElement = fieldsets[currentStep].querySelector('select');
    //       const formStep2 =
    //         fieldsets[currentStep + 1].querySelector('#form-step2');
    //       if (h2Element && selectElement && formStep2) {
    //         const selectedOptionText =
    //           selectElement.options[selectElement.selectedIndex].text;
    //         h2Element.textContent = selectedOptionText;
    //         const formHTML = getFormHTMLForService(selectedOptionText);
    //         formStep2.innerHTML = formHTML;
    //       }
    //       break;
    //     case 1:
    //       console.log('hola2');
    //       break;
    //     case 2:
    //       console.log('hola3');
    //       break;
    //   }

    //   const inputs = [...fieldsets[currentStep].querySelectorAll('input')];
    //   inputs.forEach((input) => {
    //     if (!input.reportValidity()) {
    //       input.classList.add('border-red-500');
    //     } else {
    //       input.classList.remove('border-red-500');
    //     }
    //   });
    //   const allValid = inputs.every((input) => input.reportValidity());

    //   if (allValid) {
    //     currentStep += incrementor;
    //     showStep(currentStep);
    //   }
    // });

    // fieldsets.forEach((step) => {
    //   step.addEventListener('animationend', (e: any) => {
    //     fieldsets[currentStep].classList.remove('hidden');
    //     e.target!.classList.toggle(
    //       'hidden',
    //       !e.target!.classList.contains('active')
    //     );
    //   });
    // });
  }
  init();
  document.addEventListener('astro:after-swap', init);
</script>

<form data-multi-step class="bg-white p-4 md:p-12 w-full mx-auto relative">
  <div class="w-full py-6 px-2 md:px-10 my-4">
    <!-- progressbar -->
    <ProgressBarStep />

    <hr class="my-7 mx-2 md:mx-10 h-0.5 border-t-0 bg-neutral-100" />

    <Step1 />
    <Step2 />
    <Step3 />
    <Step4 />
  </div>
</form>
