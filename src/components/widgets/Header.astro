---
import { Icon } from 'astro-icon/components';
import Logo from '@/components/Logo.astro';
import ToggleMenu from '@/components/common/ToggleMenu.astro';
import Button from '@/components/ui/Button.astro';

import { getPermalink, trimSlash } from '@/utils/permalinks';
import type { ActionLink, MenuLink } from '@/navigation';
import { getRelativeLocaleUrl } from 'astro:i18n';
import Languaje from '../ui/Languaje.astro';

const currentLocale = Astro.currentLocale ?? 'en';

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isFullWidth?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = true,
  isFullWidth = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={['top-0 z-50 flex-none mx-auto w-full border-b border-gray-50/0']}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div
    class:list={[
      'relative text-default py-0 px-2 lg:px-5 mx-auto w-full md:flex md:justify-between',
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div
      class:list={[
        { 'mr-auto': position === 'right' },
        'flex justify-between items-center',
      ]}
    >
      <a
        class="flex items-center"
        href={getPermalink(getRelativeLocaleUrl(currentLocale, '/'))}
      >
        <Logo />
      </a>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:mx-4"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.82rem] tracking-[0.02rem] font-medium"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button
                    class=""
                    class:list={[
                      'hover:text-link px-4 py-5 flex items-center  leading-snug',
                      { 'aw-link-active-select': href === currentPath },
                    ]}
                  >
                    {text}
                    <Icon
                      name="tabler:chevron-down"
                      class="w-3.5 h-3.5 ml-0.5 hidden md:inline"
                    />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            'first:rounded-t last:rounded-b md:hover:bg-gray-100 hover:text-link py-2 px-5 block whitespace-no-wrap',
                            { 'aw-link-active-select': href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'hover:text-link px-4 py-5 flex items-centers leading-snug',
                    { 'aw-link-active': href === currentPath },
                  ]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
      <Languaje />
    </nav>

    <div
      class:list={[
        { 'ml-auto': position === 'left' },
        'hidden md:self-center flex md:flex items-center md:mb-0 fixed w-full md:min-w-64 md:w-auto md:static justify-end left-0 bottom-0 p-3 md:p-0',
      ]}
    >
      <div class="items-center flex justify-end w-full md:w-auto">
        {
          actions?.length ? (
            <span>
              {actions.map((btnProps) => (
                <Button {...btnProps} class=" ml-2 shadow-none w-auto" />
              ))}
            </span>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>
